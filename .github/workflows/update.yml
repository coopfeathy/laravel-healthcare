name: update
on:
    push:
        branches:
            - master

    workflow_dispatch:

jobs:
    update:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    extensions: curl, mbstring, zip, pcntl, pdo, pdo_sqlite, iconv, json
                    coverage: none

            -   name: Git setup
                if: success()
                run: |
                    git config --local user.email "action@github.com"
                    git config --local user.name "GitHub Action"

            -   name: Install dependencies
                run: |
                    composer update --prefer-stable --prefer-dist --no-progress --no-interaction
                    composer global require ergebnis/composer-normalize

            -   name: Normalize composer.json
                id: normalize
                if: success()
                run: |
                    IS_DIRTY=1

                    composer normalize

                    { git add . && git commit -a -m "Normalize composer.json"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Scanning packages
                id: packages
                if: success()
                run: |
                    IS_DIRTY=1

                    php app/packages.php

                    { git add . && git commit -a -m "Updating package files"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Keys actualization
                id: keys
                if: success()
                run: |
                    IS_DIRTY=1

                    php app/keys.php

                    { git add . && git commit -a -m "Updating translations keys"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Updating referents
                id: referents
                if: success()
                run: |
                    IS_DIRTY=1

                    php app/referents.php

                    { git add . && git commit -a -m "Updating the docs/referents.md file"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Checking for excludes
                id: excludes
                if: success()
                run: |
                    IS_DIRTY=1

                    php app/excludes.php

                    { git add . && git commit -a -m "Updating excludes files"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Status update
                id: status
                if: success()
                run: |
                    IS_DIRTY=1

                    php app/status.php

                    { git add . && git commit -a -m "Updated status of translations"; } || IS_DIRTY=0

                    echo ::set-output name=is_dirty::${IS_DIRTY}

            -   name: Push changes
                uses: ad-m/github-push-action@master
                if: |
                    success() && (
                    steps.excludes.outputs.is_dirty == 1 ||
                    steps.keys.outputs.is_dirty == 1 ||
                    steps.normalize.outputs.is_dirty == 1 ||
                    steps.packages.outputs.is_dirty == 1 ||
                    steps.referents.outputs.is_dirty == 1 ||
                    steps.status.outputs.is_dirty == 1
                    )
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}

    docs:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v2
                with:
                    fetch-depth: 0

            -   name: Setup Node.js
                uses: actions/setup-node@v1
                with:
                    node-version: '16'

            -   name: Cache dependencies
                uses: actions/cache@v2
                id: npm-cache
                with:
                    path: |
                        **/node_modules
                    key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-npm-

            -   name: Install dependencies
                if: steps.npm-cache.outputs.cache-hit != 'true'
                run: npm i

            -   name: Build VuePress site
                run: npm run build

            -   name: Deploy to GitHub Pages
                uses: crazy-max/ghaction-github-pages@v2
                with:
                    target_branch: gh-pages
                    build_dir: docs/.vuepress/dist
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
